ALGORITHM sum_distinct
VAR i ,j, l,s : INTEGER 
set1, set2 : ARRAY OF INTEGER 


BEGIN 
s:=0
IF (set1.length > set2.length) THEN
  l := set1.length 
ELSE 
 l:=set2.length 


 FOR i FROM 0 TO l DO 
    For j FROM 0 TO l DO 
       IF (set1[i]<>set2[j]) THEN
           s:=s+set1[i]

     END_IF
     END_FOR
     END_FOR

      FOR i FROM 0 TO l DO 
    For j FROM 0 TO l DO 
       IF (set2[i]<>set1[j]) THEN
           s:=s+set2[i]

     END_IF
     END_FOR
     
END
       

 FOR i FROM 0 TO l DO 
    For j FROM 0 TO l DO 
       IF (set1[i]<>set2[j]) THEN
           s:=s+tab[i]

     END_IF
     END_FOR
     END_FOR
      FOR i FROM 0 TO l DO 
    For j FROM 0 TO l DO 
       IF (set1[i]<>set2[j]) THEN
           s:=s+tab[i]

     END_IF
     END_FOR
     END_FOR
     
//prob2 ☻  ♥ ♥


//procedure 

FUNCTION dot_product( v1 , v2 ) 
    BEGIN
          
      RETURN   v1[0]*v2[0]+v1[1]+v2[1]
       
            
    END

ALOGORITHM  dot_products
 VAR ps , i :INTEGER
    v1,v2 : ARRAY OF INTEGER 
    list : ARRAY OF ARRAYS  
BEGIN 
FOR i FROM 0 TO list.length DO 
   ps := dot_product(list[i][0],list[i][1])

   IF (ps =0 ) THEN 
    WRITE (list[i][0],list[i][1]," are orthogonal ")
ELSE
     WRITE (list[i][0],list[i][1]," are not orthogonal ")




        
